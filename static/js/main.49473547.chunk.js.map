{"version":3,"sources":["components/Button.jsx","components/TodoItem.jsx","components/TodoList.jsx","App.js","index.js"],"names":["Button","_ref","isLoading","getData","react_default","a","createElement","onClick","TodoItem","currentTodo","id","title","user","name","completed","TodoList","sortedTodos","sortFun","map","todo","components_TodoItem","App","state","todosWithUsers","direction","isLoaded","_callee","responseTodos","responseUsers","todos","users","regenerator_default","wrap","_context","prev","next","_this","setState","fetch","sent","json","Object","objectSpread","find","userId","console","log","stop","typeSortBy","toConsumableArray","sort","b","localeCompare","this","components_TodoList","components_Button","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"uNAeeA,EAbA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAWC,EAAdF,EAAcE,QAAd,OACbC,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,UAAQC,QAASJ,GAEbD,EACI,YACA,UCQGM,EAfE,SAAAP,GAAA,IAAEQ,EAAFR,EAAEQ,YAAF,OACfL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAKG,EAAYC,IACjBN,EAAAC,EAAAC,cAAA,UAAKG,EAAYE,OACjBP,EAAAC,EAAAC,cAAA,UAAKG,EAAYG,KAAKC,MACtBT,EAAAC,EAAAC,cAAA,UAEIG,EAAYK,UACR,MACA,QCkBGC,EA1BE,SAAAd,GAAA,IAAGe,EAAHf,EAAGe,YAAaC,EAAhBhB,EAAgBgB,QAAhB,OACfb,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,MAAIC,QAAS,WACXU,EAAQ,aADV,SAGAb,EAAAC,EAAAC,cAAA,MAAIC,QAAS,WACXU,EAAQ,YADV,QAGAb,EAAAC,EAAAC,cAAA,MAAIC,QAAS,WACXU,EAAQ,iBADV,eAKJb,EAAAC,EAAAC,cAAA,aAEIU,EAAYE,IAAI,SAAAC,GAAI,OAClBf,EAAAC,EAAAC,cAACc,EAAD,CAAUX,YAAaU,SCwDlBE,oNAxEbC,MAAQ,CACNC,eAAgB,KAChBP,YAAa,KACbQ,UAAW,EACXtB,WAAW,EACXuB,UAAU,KAGZtB,6BAAU,SAAAuB,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAP,EAAA,OAAAQ,EAAA1B,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACRC,EAAKC,SAAS,CACZnC,WAAW,IAFL+B,EAAAE,KAAA,EAMoBG,MAAM,8CAN1B,cAMFX,EANEM,EAAAM,KAAAN,EAAAE,KAAA,EAOoBG,MAAM,8CAP1B,cAOFV,EAPEK,EAAAM,KAAAN,EAAAE,KAAA,EAQYR,EAAca,OAR1B,cAQFX,EAREI,EAAAM,KAAAN,EAAAE,KAAA,GASYP,EAAcY,OAT1B,QASFV,EATEG,EAAAM,KAYFhB,EAAiBM,EAAMX,IAAI,SAAAC,GAAI,OAAAsB,OAAAC,EAAA,EAAAD,CAAA,GAChCtB,EADgC,CAEnCP,KAAMkB,EAAMa,KAAK,SAAA/B,GAAI,OAAIA,EAAKF,KAAOS,EAAKyB,aAE5CC,QAAQC,IAAIvB,GAEZa,EAAKC,SAAS,CACZd,eAAgBA,EAChBP,YAAaO,EACbrB,WAAW,EACXuB,UAAU,IAtBJ,yBAAAQ,EAAAc,SAAArB,QA0BVT,QAAU,SAAC+B,GACTZ,EAAKC,SAAS,SAAAf,GAAK,MAAK,CACtBE,UAA+B,IAApBF,EAAME,WAAmB,EAAI,EACxCR,YAAayB,OAAAQ,EAAA,EAAAR,CAAInB,EAAMC,gBAAgB2B,KAAK,SAAC7C,EAAG8C,GAC9C,OAAOH,GACL,IAAK,UACH,OAAO3C,EAAEM,MAAMyC,cAAcD,EAAExC,OAASW,EAAME,UAChD,IAAK,SACH,OAAOnB,EAAEO,KAAKC,KAAKuC,cAAcD,EAAEvC,KAAKC,MAAQS,EAAME,UACxD,IAAK,cACH,OAAQ2B,EAAErC,UAAYT,EAAES,WAAaQ,EAAME,UAC7C,QACE,OAAO,iFAOf,OACEpB,EAAAC,EAAAC,cAAA,WAEI+C,KAAK/B,MAAMG,SACPrB,EAAAC,EAAAC,cAACgD,EAAD,CACErC,QAASoC,KAAKpC,QACdD,YAAaqC,KAAK/B,MAAMN,cAE1BZ,EAAAC,EAAAC,cAACiD,EAAD,CACErD,UAAWmD,KAAK/B,MAAMpB,UACtBC,QAASkD,KAAKlD,kBAhEZqD,IAAMC,YCDxBC,IAASC,OAAOvD,EAAAC,EAAAC,cAACsD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.49473547.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Button = ({ isLoading, getData }) => (\r\n  <div>\r\n    \r\n    <button onClick={getData}>\r\n      {\r\n        isLoading\r\n          ? 'Loding...'\r\n          : 'Load'\r\n      }\r\n    </button>\r\n  </div>\r\n)\r\n\r\nexport default Button","import React from 'react'\r\n\r\nconst TodoItem = ({currentTodo}) => (\r\n  <tr>\r\n    <td>{currentTodo.id}</td>\r\n    <td>{currentTodo.title}</td>\r\n    <td>{currentTodo.user.name}</td>\r\n    <td>\r\n      {\r\n        currentTodo.completed\r\n          ? 'yes'\r\n          : 'no'\r\n      }\r\n    </td>\r\n  </tr>\r\n)\r\n\r\nexport default TodoItem","import React from 'react'\r\nimport TodoItem from './TodoItem'\r\n\r\nconst TodoList = ({ sortedTodos, sortFun }) => (\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>ID</th>\r\n        <th onClick={() => {\r\n          sortFun('byTitle')\r\n        }}>Title</th>\r\n        <th onClick={() => {\r\n          sortFun('byUser')\r\n        }}>User</th>\r\n        <th onClick={() => {\r\n          sortFun('byCompleted')\r\n        }}>Completed</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {\r\n        sortedTodos.map(todo => (\r\n          <TodoItem currentTodo={todo} />\r\n        ))\r\n      }\r\n    </tbody>\r\n  </table>\r\n)\r\n\r\nexport default TodoList","import React from 'react';\nimport Button from './components/Button'\nimport TodoList from './components/TodoList'\nimport { thisExpression } from '@babel/types';\n\nclass App extends React.Component {\n  state = {\n    todosWithUsers: null,\n    sortedTodos: null,\n    direction: 1,\n    isLoading: false,\n    isLoaded: false,\n  }\n\n  getData = async () => {\n    this.setState({\n      isLoading: true,\n    })\n\n    // получаем данные с сервера\n    const responseTodos = await fetch('https://jsonplaceholder.typicode.com/todos');\n    const responseUsers = await fetch('https://jsonplaceholder.typicode.com/users');\n    const todos = await responseTodos.json();\n    const users = await responseUsers.json();\n\n    // добавляем к одной тудушке нужного юзера\n    const todosWithUsers = todos.map(todo => ({\n      ...todo,\n      user: users.find(user => user.id === todo.userId),\n    }));\n    console.log(todosWithUsers);\n\n    this.setState({\n      todosWithUsers: todosWithUsers,\n      sortedTodos: todosWithUsers,\n      isLoading: false,\n      isLoaded: true,\n    })\n  }\n\n  sortFun = (typeSortBy) => {\n    this.setState(state => ({\n      direction: state.direction === 1 ? -1 : 1,\n      sortedTodos: [...state.todosWithUsers].sort((a, b) => {\n        switch(typeSortBy) {\n          case 'byTitle':\n            return a.title.localeCompare(b.title) * state.direction;\n          case 'byUser':\n            return a.user.name.localeCompare(b.user.name) * state.direction;\n          case 'byCompleted':\n            return (b.completed - a.completed) * state.direction;\n          default:\n            return 0;\n        }\n      }),\n    }))\n  }\n\n  render() {\n    return (\n      <div>\n        {\n          this.state.isLoaded\n            ? <TodoList \n                sortFun={this.sortFun}\n                sortedTodos={this.state.sortedTodos}\n              />\n            : <Button \n                isLoading={this.state.isLoading}\n                getData={this.getData}\n              />\n        }\n      </div>\n    )\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}